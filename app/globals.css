@tailwind base;
@tailwind components;
@tailwind utilities;

/* Browser reset */
*,
*::before,
*::after {
    box-sizing: border-box;
}

* {
    margin: 0;
    min-width: 0;
}

body {
    line-height: 1.5;
}

img,
picture,
video,
canvas,
svg {
    display: block;
    max-width: 100%;
}

input,
button,
textarea,
select {
    font: inherit;
}

button {
    color: inherit;
    border: 1px solid currentColor;
    background-color: transparent;
    border-radius: 0;
    cursor: pointer;
    touch-action: manipulation;
    -webkit-tap-highlight-color: rgba(0, 0, 0, 0);
}

a {
    color: inherit;
}

@media (prefers-reduced-motion: reduce) {
    *,
    *::before,
    *::after {
        animation-duration: 0.01ms !important;
        animation-iteration-count: 1 !important;
        transition-duration: 0.01ms !important;
        scroll-behavior: auto !important;
    }
}

/* Base document setup */
:root {
    /* Colors */
    --color-white: white;
    --color-black: black;
    --color-background: rgb(44, 47, 51, 1);
    --color-red: rgba(237, 66, 69, 1);
    --color-fushcia: rgba(235, 69, 158, 1);
    --color-yellow: rgba(254, 231, 92, 1);
    --color-green: rgba(87, 242, 135, 1);
    --color-blurple: rgba(88, 101, 242, 1);
    --current-background: var(--color-black);

    /* Screen sizes */
    --screen-lg: 1024px;
    --screen-md: 768px;
}

body, div, span {
    width: 100%;
    height: 100%;
}

html {
    color: var(--color-white);
    min-height: 100vh;
}

body {
    transition: ease-in .4s;
    background-color: var(--current-background);
    background-image: linear-gradient(120deg,
    rgba(0, 0, 0, 0.4) 0%,
    rgba(0, 0, 0, 0.5) 20%,
    rgba(0, 0, 0, 1) 100%
    );
}

/* Shared content container*/
/* Taken from Kevin Powell - A new approach to container and wrapper classes: https://www.youtube.com/watch?v=c13gpBrnGEw */
.content-grid {
    --padding-inline: 1rem;
    --content-max-width: 900px;
    --breakout-max-width: 1200px;

    --breakout-size: calc(
            (var(--breakout-max-width) - var(--content-max-width)) / 2
    );

    display: grid;
    grid-template-columns:
    [full-width-start] minmax(var(--padding-inline), 1fr)
    [breakout-start] minmax(0, var(--breakout-size))
    [content-start] min(
      100% - (var(--padding-inline) * 2),
      var(--content-max-width)
    )
    [content-end]
    minmax(0, var(--breakout-size)) [breakout-end]
    minmax(var(--padding-inline), 1fr) [full-width-end];
}

.content-grid > :not(.breakout, .full-width),
.full-width > :not(.breakout, .full-width) {
    grid-column: content;
}

.content-grid > .breakout {
    grid-column: breakout;
}

.content-grid > .full-width {
    grid-column: full-width;

    display: grid;
    grid-template-columns: inherit;
}
